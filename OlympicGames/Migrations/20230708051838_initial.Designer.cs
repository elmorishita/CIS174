// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGames.Models;

#nullable disable

namespace OlympicGames.Migrations
{
    [DbContext(typeof(OlympicContext))]
    [Migration("20230708051838_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OlympicGames.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "curling",
                            Name = "Curling/Indoor"
                        },
                        new
                        {
                            CategoryId = "bobsleigh",
                            Name = "Bobsleigh/Outdoor"
                        },
                        new
                        {
                            CategoryId = "diving",
                            Name = "Diving/Indoor"
                        },
                        new
                        {
                            CategoryId = "cycling",
                            Name = "Road Cycling/Outdoor"
                        },
                        new
                        {
                            CategoryId = "archery",
                            Name = "Archery/Indoor"
                        },
                        new
                        {
                            CategoryId = "canoe",
                            Name = "Canoe Sprint/Outdoor"
                        },
                        new
                        {
                            CategoryId = "break",
                            Name = "Breakdancing/Indoor"
                        },
                        new
                        {
                            CategoryId = "skateboard",
                            Name = "Skateboarding/Outdoor"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Country", b =>
                {
                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GameId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = "as",
                            CategoryId = "canoe",
                            CountryName = "Austria",
                            FlagImage = "tn_as-flag.gif",
                            GameId = "paralympics"
                        },
                        new
                        {
                            CountryId = "br",
                            CategoryId = "cycling",
                            CountryName = "Brazil",
                            FlagImage = "tn_br-flag.gif",
                            GameId = "summer"
                        },
                        new
                        {
                            CountryId = "ca",
                            CategoryId = "curling",
                            CountryName = "Canada ",
                            FlagImage = "tn_ca-flag.gif",
                            GameId = "winter"
                        },
                        new
                        {
                            CountryId = "ch",
                            CategoryId = "diving",
                            CountryName = "China",
                            FlagImage = "tn_ch-flag.gif",
                            GameId = "summer"
                        },
                        new
                        {
                            CountryId = "ci",
                            CategoryId = "skateboard",
                            CountryName = "Chile",
                            FlagImage = "tn_ci-flag.gif",
                            GameId = "paralympics"
                        },
                        new
                        {
                            CountryId = "cy",
                            CategoryId = "break",
                            CountryName = "Cyprus",
                            FlagImage = "tn_cy-flag.gif",
                            GameId = "youth"
                        },
                        new
                        {
                            CountryId = "fi",
                            CategoryId = "skateboard",
                            CountryName = "Finland",
                            FlagImage = "tn_fi-flag.gif",
                            GameId = "youth"
                        },
                        new
                        {
                            CountryId = "fr",
                            CategoryId = "break",
                            CountryName = "France",
                            FlagImage = "tn_fr-flag.gif",
                            GameId = "youth"
                        },
                        new
                        {
                            CountryId = "gm",
                            CategoryId = "diving",
                            CountryName = "Germany",
                            FlagImage = "tn_gm-flag.gif",
                            GameId = "summer"
                        },
                        new
                        {
                            CountryId = "it",
                            CategoryId = "bobsleigh",
                            CountryName = "Italy",
                            FlagImage = "tn_it-flag.gif",
                            GameId = "winter"
                        },
                        new
                        {
                            CountryId = "ja",
                            CategoryId = "bobsleigh",
                            CountryName = "Japan",
                            FlagImage = "tn_ja-flag.gif",
                            GameId = "winter"
                        },
                        new
                        {
                            CountryId = "jm",
                            CategoryId = "bobsleigh",
                            CountryName = "Jamaica",
                            FlagImage = "tn_jm-flag.gif",
                            GameId = "winter"
                        },
                        new
                        {
                            CountryId = "lo",
                            CategoryId = "skateboard",
                            CountryName = "Slovakia",
                            FlagImage = "tn_lo-flag.gif",
                            GameId = "youth"
                        },
                        new
                        {
                            CountryId = "mx",
                            CategoryId = "diving",
                            CountryName = "Mexico",
                            FlagImage = "tn_mx-flag.gif",
                            GameId = "summer"
                        },
                        new
                        {
                            CountryId = "nl",
                            CategoryId = "cycling",
                            CountryName = "Netherlands",
                            FlagImage = "tn_nl-flag.gif",
                            GameId = "summer"
                        },
                        new
                        {
                            CountryId = "pk",
                            CategoryId = "canoe",
                            CountryName = "Pakistan ",
                            FlagImage = "tn_pk-flag.gif",
                            GameId = "paralympics"
                        },
                        new
                        {
                            CountryId = "po",
                            CategoryId = "skateboard",
                            CountryName = "Portugal",
                            FlagImage = "tn_po-flag.gif",
                            GameId = "youth"
                        },
                        new
                        {
                            CountryId = "rs",
                            CategoryId = "break",
                            CountryName = "Russia",
                            FlagImage = "tn_rs-flag.gif",
                            GameId = "youth"
                        },
                        new
                        {
                            CountryId = "sw",
                            CategoryId = "curling",
                            CountryName = "Sweden ",
                            FlagImage = "tn_sw-flag.gif",
                            GameId = "winter"
                        },
                        new
                        {
                            CountryId = "th",
                            CategoryId = "archery",
                            CountryName = "Thailand",
                            FlagImage = "tn_th-flag.gif",
                            GameId = "paralympics"
                        },
                        new
                        {
                            CountryId = "uk",
                            CategoryId = "curling",
                            CountryName = "United Kingdom",
                            FlagImage = "tn_uk-flag.gif",
                            GameId = "winter"
                        },
                        new
                        {
                            CountryId = "up",
                            CategoryId = "archery",
                            CountryName = "Ukraine",
                            FlagImage = "tn_up-flag.gif",
                            GameId = "paralympics"
                        },
                        new
                        {
                            CountryId = "us",
                            CategoryId = "cycling",
                            CountryName = "USA",
                            FlagImage = "tn_us-flag.gif",
                            GameId = "summer"
                        },
                        new
                        {
                            CountryId = "uy",
                            CategoryId = "archery",
                            CountryName = "Uruguay",
                            FlagImage = "tn_uy-flag.gif",
                            GameId = "paralympics"
                        },
                        new
                        {
                            CountryId = "zi",
                            CategoryId = "canoe",
                            CountryName = "Zimbabwe",
                            FlagImage = "tn_zi-flag.gif",
                            GameId = "paralympics"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = "winter",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameId = "summer",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameId = "paralympics",
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameId = "youth",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Country", b =>
                {
                    b.HasOne("OlympicGames.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicGames.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
